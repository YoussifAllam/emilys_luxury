name: Django CI

# Trigger the workflow when pushing to the repo or creating a pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        volumes:
          - /var/lib/postgresql/data

    steps:
      # Step 1: Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9' # You can adjust the version as needed

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Set up the environment (e.g., for Postgres)
      - name: Set up environment
        run: |
          python manage.py migrate

      # Step 5: Run tests
      - name: Run tests
        run: |
          python manage.py test

      # Step 6: Run the Django server (optional)
      # This step is optional; running tests is usually sufficient
      # You can remove this if you don't need to run the development server
      - name: Run Django Development Server
        run: |
          python manage.py runserver 0.0.0.0:8000 &
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
